name: 🧪 Run Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: 🔬 Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐹 Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: api/go.sum

    - name: 📦 Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('api/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: 🔧 Install dependencies
      working-directory: ./api
      run: go mod tidy

    - name: 🏗️ Build application
      working-directory: ./api
      run: go build -v .

    - name: 🧪 Run tests
      working-directory: ./api
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out

    - name: 📊 Generate coverage report
      working-directory: ./api
      run: go tool cover -html=coverage.out -o coverage.html

    - name: 📈 Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          api/coverage.out
          api/coverage.html
        retention-days: 30

    - name: 🔍 Lint code
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        working-directory: api
        args: --timeout=5m

  integration-test:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐹 Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: 🐳 Build Docker image
      run: |
        docker build -t promptforge:test .

    - name: 🚀 Run container
      run: |
        docker run -d --name promptforge-test -p 8080:8080 promptforge:test
        sleep 10

    - name: 🔍 Health check
      run: |
        curl -f http://localhost:8080/api/health || exit 1
        echo "✅ Health check passed"

    - name: 🧹 Cleanup
      if: always()
      run: |
        docker stop promptforge-test || true
        docker rm promptforge-test || true

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🛡️ Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@v1
      with:
        args: '-fmt sarif -out gosec.sarif ./api/...'

    - name: 📤 Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec.sarif 